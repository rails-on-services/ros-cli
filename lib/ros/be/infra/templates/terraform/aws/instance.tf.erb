locals {
  domain_name = "<%= infra.dns.sub_domain %><%= infra.dns.sub_domain.nil? ? "" : "."%><%= infra.dns.root_domain %>"
}

module "vpc" {
  source  = "terraform-aws-modules/vpc/aws"
  version = "~> 2.18.0"
  name    = "<%= tf.vpc.config.name %>"
  cidr    = "<%= tf.vpc.config.cidr %>"
}

module "route53" {
  source                         = "rails-on-services/route53/aws"
  root_domain                    = "<%= tf.dns.config.root_domain %>"
  sub_domain                     = "<%= tf.dns.config.sub_domain %>"
  root_domain_managed_in_route53 = true
}


module "acm" {
  source                    = "rails-on-services/acm/aws"
  domain_name               = local.domain_name
  route53_domain_name       = substr(module.route53.this.name, 0, length(module.route53.this.name)-1)
  route53_dns_record_count  = 1
  subject_alternative_names = [
    "*.${local.domain_name}"
    <%- infra.components.cert.config.subject_alternative_names&.each do |v| -%>
    , "<%= v %>"
    <% end -%>
  ]
  validate_certificate      = <%= infra.dns.root_domain_managed_in_route53 ? true : false %>
}


module "ec2" {
  source           = "rails-on-services/ec2/aws"
  name_prefix      = "<%= tf.instance.config.name_prefix %>"
  vpc_id           = module.vpc.this.vpc_id
  subnet_ids       = module.vpc.this.public_subnets
  aws_cert_arn     = module.acm.this.arn
  lb_dns_hostnames = ["<%= infra.components.dns.config.endpoints&.api&.host.nil? ? "api" : infra.components.dns.config.endpoints.api.host %>.${local.domain_name}"]
  route53_zone_id  = module.route53.this.zone_id
  ec2_key_pair     = "<%= tf.instance.config.ec2_key_pair %>"
}

output "vpc" {
  value = module.vpc.this
}

output "route53" {
  value = module.route53.this
}

output "acm" {
  value = module.acm.this
}

output "ec2" {
  value = module.ec2.this
}

output "ec2-eip" {
  value = module.ec2.eip
}

output "ec2-lb" {
  value = module.ec2.lb
}

output "lb_route53_record" {
  value = module.ec2.lb_route53_record
}
