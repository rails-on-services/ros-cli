apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-creation
spec:
  template:
    metadata:
      name: kafka-topic-creation
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      restartPolicy: OnFailure
      containers:
        <%- @service.kafka_topics.each do |svc, topics| -%>
        - name: create-topics-<%= svc.to_s %>
          image: confluentinc/cp-kafka:5.3.0
          command:
            - bash
            - -c
            - |
              cat <<EOT > ./config
              request.timeout.ms=20000
              retry.backoff.ms=500
              <%- if @service.kafka.security_protocol == "SASL_SSL" -%>
              security.protocol=SASL_SSL
              ssl.endpoint.identification.algorithm=https
              <%- if @service.kafka.sasl_mechanism == "PLAIN" -%>
              sasl.mechanism=PLAIN
              sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="<%= @service.kafka.username %>" password\="<%= @service.kafka.password %>";
              <%- end -%>
              <%- end -%>
              EOT

              topics=(<%= topics.join(" ") %>)
              for topic in ${topics[@]}; do
                if kafka-topics --bootstrap-server <%= @service.kafka.bootstrap_servers %> --command-config ./config --list | grep "^${topic}$" ; then
                  echo "Topic ${topic} already exist, nothing to do"
                else
                  echo "Creating topic ${topic}"
                  kafka-topics --bootstrap-server <%= @service.kafka.bootstrap_servers %> \
                  --command-config ./config --create --topic "${topic}" \
                  --config cleanup.policy=compact --config segment.ms=600000 \
                  --config delete.retention.ms=600000 --partitions <%= @service.kafka.topic_partitions || 1 %> \
                  --replication-factor <%= @service.kafka.topic_replication_factor || 1 %>
                fi
              done
        <%- end -%>
