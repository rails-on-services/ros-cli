---
apiVersion: <%= @service.skaffold_version %>
kind: Config
deploy:
  helm:
    releases:
      - name: kafka-schema-registry
        chartPath: ros/cp-schema-registry
        skipBuildDependencies: true
        remote: true
        wait: true
        overrides:
          imageTag: 5.3.1
          replicaCount: 2
          fullnameOverride: kafka-schema-registry
          overrideGroupId: kafka-schema-registry-<%= @service.current_feature_set %>
          customEnv:
            SCHEMA_REGISTRY_DEBUG: true
            SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID: schema-registry-<%= @service.current_feature_set %>
          podLabels:
            app.kubernetes.io/name: kafka-schema-registry
            app.kubernetes.io/part-of: application-services
          podAnnotations:
            prometheus.io/scheme: http
            prometheus.io/path: /metrics
          kafka:
            <%- if @service.kafka.security_protocol == "SASL_SSL" -%>
            bootstrapServers: "SASL_SSL://<%= @service.kafka.bootstrap_servers %>"
            <%- else -%>
            bootstrapServers: "PLAINTEXT://<%= @service.kafka.bootstrap_servers %>"
            <%- end -%>
          configurationOverrides:
            <%- if @service.kafka.security_protocol == "SASL_SSL" -%>
            kafkastore.security.protocol: SASL_SSL
            <%- if @service.kafka.sasl_mechanism == "PLAIN" -%>
            kafkastore.sasl.mechanism: PLAIN
            kafkastore.sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="<%= @service.kafka.username %>" password="<%= @service.kafka.password %>";
            <%- end -%>
            <%- end -%>
            kafkastore.topic: _schemas_<%= @service.current_feature_set %>
          heapOptions: "-Xms1024M -Xmx1024M"
          resources:
            limits:
              cpu: 1
              memory: 1.5Gi
            requests:
              cpu: 100m
              memory: 1Gi
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - kafka-schema-registry
      <%- if @service.kafka_schema_registry&.ui -%>
      - name: kafka-schema-registry-ui
        chartPath: ros/basic
        remote: true
        overrides:
          nameOverride: kafka-schema-registry-ui
          image:
            repository: landoop/schema-registry-ui
          containerPort: 8000
          env:
            SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081
            PROXY: "true"
            ALLOW_GLOBAL: 1
            ALLOW_TRANSITIVE: 1
            ALLOW_DELETION: 1
          resources:
            limits:
              cpu: 1
              memory: 150Mi
            requests:
              cpu: 50m
              memory: 100Mi
          tolerations:
          - key: spotInstance
            operator: Exists
            effect: NoSchedule
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  - key: kubernetes.io/lifecycle
                    operator: In
                    values:
                    - spot
      <%- end -%>
